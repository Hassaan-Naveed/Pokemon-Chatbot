{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:36.425068Z\",\"iopub.execute_input\":\"2022-04-07T04:08:36.426301Z\",\"iopub.status.idle\":\"2022-04-07T04:08:36.431880Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:36.426244Z\",\"shell.execute_reply\":\"2022-04-07T04:08:36.431141Z\"}}\nimport os\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import regularizers\nimport keras_tuner as kt\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:36.529603Z\",\"iopub.execute_input\":\"2022-04-07T04:08:36.530097Z\",\"iopub.status.idle\":\"2022-04-07T04:08:36.535561Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:36.530049Z\",\"shell.execute_reply\":\"2022-04-07T04:08:36.534767Z\"}}\ntrain_gen=ImageDataGenerator(rescale=1./255, validation_split=0.2)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:36.643062Z\",\"iopub.execute_input\":\"2022-04-07T04:08:36.643923Z\",\"iopub.status.idle\":\"2022-04-07T04:08:37.355989Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:36.643883Z\",\"shell.execute_reply\":\"2022-04-07T04:08:37.355019Z\"}}\ntrain = train_gen.flow_from_directory(batch_size=32,\n                                      directory='../input/pokemonclassification/PokemonData/',\n                                      shuffle=True,\n                                      target_size=(128, 128), \n                                      subset=\"training\",\n                                      class_mode='categorical')\n\ntest = train_gen.flow_from_directory(batch_size=32,\n                                      directory='../input/pokemonclassification/PokemonData/',\n                                      shuffle=True,\n                                      target_size=(128, 128), \n                                      subset=\"validation\",\n                                      class_mode='categorical')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:37.358097Z\",\"iopub.execute_input\":\"2022-04-07T04:08:37.358549Z\",\"iopub.status.idle\":\"2022-04-07T04:08:37.370100Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:37.358502Z\",\"shell.execute_reply\":\"2022-04-07T04:08:37.368651Z\"}}\ndef model_builder(hp):\n    model = keras.Sequential(\n        [\n            keras.Input(shape=(128,128,3)),\n            \n            keras.layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n            keras.layers.MaxPooling2D(pool_size=(2, 2)),\n            \n            keras.layers.Dropout(0.25),\n            \n            keras.layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n            keras.layers.MaxPooling2D(pool_size=(2, 2)),\n            \n            keras.layers.Dropout(0.5),\n            \n            keras.layers.Flatten(),\n            keras.layers.Dropout(0.5),\n            \n            keras.layers.Dense(256, activation=\"relu\"),\n            keras.layers.Dense(150, activation=\"sigmoid\"),\n        ]\n    )\n    \n    hp_learning_rate = hp.Choice('learning_rate', values=[1e-2, 1e-3, 1e-4])\n    \n    model.compile(optimizer=keras.optimizers.Adam(learning_rate=hp_learning_rate),\n                  loss=keras.losses.CategoricalCrossentropy(),\n                  metrics=['accuracy'])\n    \n    return model\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:37.371437Z\",\"iopub.execute_input\":\"2022-04-07T04:08:37.371666Z\",\"iopub.status.idle\":\"2022-04-07T04:08:37.513659Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:37.371639Z\",\"shell.execute_reply\":\"2022-04-07T04:08:37.512703Z\"}}\ntuner = kt.Hyperband(model_builder,\n                     objective=kt.Objective('accuracy',direction='max'),\n                     max_epochs=10,\n                     factor=3)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:37.516140Z\",\"iopub.execute_input\":\"2022-04-07T04:08:37.516452Z\",\"iopub.status.idle\":\"2022-04-07T04:08:37.522153Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:37.516395Z\",\"shell.execute_reply\":\"2022-04-07T04:08:37.521198Z\"}}\nstop_early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:37.523605Z\",\"iopub.execute_input\":\"2022-04-07T04:08:37.523874Z\",\"iopub.status.idle\":\"2022-04-07T04:08:37.543041Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:37.523841Z\",\"shell.execute_reply\":\"2022-04-07T04:08:37.541880Z\"}}\ntuner.search(train, epochs=10, batch_size=128, callbacks=[stop_early])\nbest_hps=tuner.get_best_hyperparameters(num_trials=1)[0]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:08:37.545151Z\",\"iopub.execute_input\":\"2022-04-07T04:08:37.545632Z\",\"iopub.status.idle\":\"2022-04-07T04:21:26.189363Z\",\"shell.execute_reply.started\":\"2022-04-07T04:08:37.545569Z\",\"shell.execute_reply\":\"2022-04-07T04:21:26.187968Z\"}}\nmodel = tuner.hypermodel.build(best_hps)\nmodel.fit(train, epochs=10, batch_size=128, callbacks=[stop_early])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:21:26.190937Z\",\"iopub.execute_input\":\"2022-04-07T04:21:26.191206Z\",\"iopub.status.idle\":\"2022-04-07T04:21:51.761209Z\",\"shell.execute_reply.started\":\"2022-04-07T04:21:26.191173Z\",\"shell.execute_reply\":\"2022-04-07T04:21:51.760121Z\"}}\ntest_loss, test_acc = model.evaluate(test, verbose=2)\nprint('\\n Test accuracy:', test_acc)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-04-07T04:21:51.763227Z\",\"iopub.execute_input\":\"2022-04-07T04:21:51.763533Z\",\"iopub.status.idle\":\"2022-04-07T04:21:52.347237Z\",\"shell.execute_reply.started\":\"2022-04-07T04:21:51.763497Z\",\"shell.execute_reply\":\"2022-04-07T04:21:52.346218Z\"}}\nmodel.save(\"pokemon_classifier.h5\")","metadata":{"_uuid":"ce1e6f88-25b0-476e-8124-366a9363681d","_cell_guid":"6a56b738-589b-4f60-b8aa-7b674f6562c3","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}